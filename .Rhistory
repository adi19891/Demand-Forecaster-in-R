#################################
### Loading required packages ###
#################################
library(readxl)
library(pim)
library(brms)
library(lubridate)
library(ggplot2)
canada_travel = read_excel("C:/Users/luke.rathbone/Desktop/Demand Forecaster/Canada_Modelfile_05112020.xlsx", sheet="Modelfile")
install.packages("pim")
install.packages("brms")
install.packages("brms")
library(readxl)
library(pim)
library(brms)
library(lubridate)
library(ggplot2)
canada_travel = read_excel("C:/Users/luke.rathbone/Desktop/Demand Forecaster/Canada_Modelfile_05112020.xlsx", sheet="Modelfile")
prior_list<-
c(
set_prior("normal(0,10)", class = "b",nlpar = "bcc",ub=-0.001),
set_prior("normal(0,10)", class = "b",nlpar = "bcd",ub=-0.001),
set_prior("normal(0,10)", class = "b",nlpar = "bcv",ub=-0.001),
set_prior("normal(0,10)", class = "b",nlpar = "bld",lb=-10,ub=-0.001),
set_prior("normal(0,10)", class = "b",nlpar = "bconf",lb=0.5,ub=10),
set_prior("normal(0,10)", class = "b",nlpar = "bs",ub=10)
)
fit_brms <- brm(
bf(
expediasi ~ (bcc*covidcases) + (bcd* coviddeaths) + (bcv * coronavirussi) + (bld *lockdown) + (bconf * cci) + (bs * seasonality),
bcc + bcd + bcv + bld + bconf + bs ~ 1,
nl = TRUE
),
data= canada_travel,
family = "gaussian",
prior = prior_list,
control = list(adapt_delta = 0.97),
chains = 4,
warmup = 1000,
iter = 5000,
cores = 3
)
predicted_values <- as.data.frame(predict(fit_brms , canada_travel))
View(canada_travel)
View(prior_list)
View(canada_travel)
View(canada_travel)
prior_list<-
c(
set_prior("normal(0,10)", class = "b",nlpar = "bcc",ub=-0.001),
set_prior("normal(0,10)", class = "b",nlpar = "bcd",ub=-0.001),
set_prior("normal(0,10)", class = "b",nlpar = "bcv",ub=-0.001),
set_prior("normal(0,10)", class = "b",nlpar = "bld",lb=-10,ub=-0.001),
set_prior("normal(0,10)", class = "b",nlpar = "bconf",lb=0.5,ub=10),
set_prior("normal(0,10)", class = "b",nlpar = "bs",ub=10)
)
fit_brms <- brm(
bf(
expedia_si ~ (bcc*covid_cases) + (bcd* covid_deaths) + (bcv * coronavirus_si) + (bld *lockdown) + (bconf * cci) + (bs * seasonality),
bcc + bcd + bcv + bld + bconf + bs ~ 1,
nl = TRUE
),
data= canada_travel,
family = "gaussian",
prior = prior_list,
control = list(adapt_delta = 0.97),
chains = 4,
warmup = 1000,
iter = 5000,
cores = 3
)
canada_travel = read_excel("C:/Users/luke.rathbone/Desktop/Demand Forecaster/Canada_Modelfile_05112020.xlsx", sheet="Modelfile")
View(canada_travel)
prior_list<-
c(
set_prior("normal(0,10)", class = "b",nlpar = "bcc",ub=-0.001),
set_prior("normal(0,10)", class = "b",nlpar = "bcd",ub=-0.001),
set_prior("normal(0,10)", class = "b",nlpar = "bcv",ub=-0.001),
set_prior("normal(0,10)", class = "b",nlpar = "bld",lb=-10,ub=-0.001),
set_prior("normal(0,10)", class = "b",nlpar = "bconf",lb=0.5,ub=10),
set_prior("normal(0,10)", class = "b",nlpar = "bs",ub=10)
)
fit_brms <- brm(
bf(
expedia_si ~ (bcc*covid_cases) + (bcd* covid_deaths) + (bcv * coronavirus_si) + (bld *lockdown) + (bconf * cci) + (bs * seasonality),
bcc + bcd + bcv + bld + bconf + bs ~ 1,
nl = TRUE
),
data= canada_travel,
family = "gaussian",
prior = prior_list,
control = list(adapt_delta = 0.97),
chains = 4,
warmup = 1000,
iter = 5000,
cores = 3
)
predicted_values <- as.data.frame(predict(fit_brms , canada_travel))
fit_df <- cbind.data.frame(canada_travel$date , canada_travel$expedia_si , predicted_values$Estimate)
colnames(fit_df)[1] <- "Date"
colnames(fit_df)[2] <- "Actual"
colnames(fit_df)[3] <- "Predicted"
rm(predicted_list)
ggplot(fit_df , aes(x = Date)) +
geom_line(aes(y = Actual , color = "Actual")) +
geom_line(aes(y = Predicted , color = "Predicted")) +
xlab("Date") +
ylab("Travel Trends")
canada_travel = read_excel("C:/Users/luke.rathbone/Desktop/Demand Forecaster/Canada_Modelfile_041921.xlsx", sheet="Modelfile")
prior_list<-
c(
set_prior("normal(0,10)", class = "b",nlpar = "bcc",ub=-0.001),
set_prior("normal(0,10)", class = "b",nlpar = "bcd",ub=-0.001),
set_prior("normal(0,10)", class = "b",nlpar = "bcv",ub=-0.001),
set_prior("normal(0,10)", class = "b",nlpar = "bld",lb=-10,ub=-0.001),
set_prior("normal(0,10)", class = "b",nlpar = "bconf",lb=0.5,ub=10),
set_prior("normal(0,10)", class = "b",nlpar = "bs",ub=10)
)
fit_brms <- brm(
bf(
expedia_si ~ (bcc*covid_cases) + (bcd* covid_deaths) + (bcv * coronavirus_si) + (bld *lockdown) + (bconf * cci) + (bs * seasonality),
bcc + bcd + bcv + bld + bconf + bs ~ 1,
nl = TRUE
),
data= canada_travel,
family = "gaussian",
prior = prior_list,
control = list(adapt_delta = 0.97),
chains = 4,
warmup = 1000,
iter = 5000,
cores = 3
)
predicted_values <- as.data.frame(predict(fit_brms , canada_travel))
fit_df <- cbind.data.frame(canada_travel$date , canada_travel$expedia_si , predicted_values$Estimate)
colnames(fit_df)[1] <- "Date"
colnames(fit_df)[2] <- "Actual"
colnames(fit_df)[3] <- "Predicted"
rm(predicted_list)
ggplot(fit_df , aes(x = Date)) +
geom_line(aes(y = Actual , color = "Actual")) +
geom_line(aes(y = Predicted , color = "Predicted")) +
xlab("Date") +
ylab("Travel Trends")
prior_list<-
c(
set_prior("normal(0,10)", class = "b",nlpar = "bcc",ub=-0.01),
set_prior("normal(0,10)", class = "b",nlpar = "bcd",ub=-0.01),
set_prior("normal(0,10)", class = "b",nlpar = "bcv",ub=-0.01),
set_prior("normal(0,10)", class = "b",nlpar = "bld",lb=-20,ub=-0.001),
set_prior("normal(0,10)", class = "b",nlpar = "bconf",lb=0.5,ub=20),
set_prior("normal(0,10)", class = "b",nlpar = "bs",ub=20)
)
fit_brms <- brm(
bf(
expedia_si ~ (bcc*covid_cases) + (bcd* covid_deaths) + (bcv * coronavirus_si) + (bld *lockdown) + (bconf * cci) + (bs * seasonality),
bcc + bcd + bcv + bld + bconf + bs ~ 1,
nl = TRUE
),
data= canada_travel,
family = "gaussian",
prior = prior_list,
control = list(adapt_delta = 0.97),
chains = 4,
warmup = 1000,
iter = 5000,
cores = 3
)
######################
### Fit chart #######
#####################
predicted_values <- as.data.frame(predict(fit_brms , canada_travel))
fit_df <- cbind.data.frame(canada_travel$date , canada_travel$expedia_si , predicted_values$Estimate)
colnames(fit_df)[1] <- "Date"
colnames(fit_df)[2] <- "Actual"
colnames(fit_df)[3] <- "Predicted"
rm(predicted_list)
ggplot(fit_df , aes(x = Date)) +
geom_line(aes(y = Actual , color = "Actual")) +
geom_line(aes(y = Predicted , color = "Predicted")) +
xlab("Date") +
ylab("Travel Trends")
prior_list<-
c(
set_prior("normal(0,10)", class = "b",nlpar = "bcc",ub=-0.0001),
set_prior("normal(0,10)", class = "b",nlpar = "bcd",ub=-0.0001),
set_prior("normal(0,10)", class = "b",nlpar = "bcv",ub=-0.0001),
set_prior("normal(0,10)", class = "b",nlpar = "bld",lb=-10,ub=-0.001),
set_prior("normal(0,10)", class = "b",nlpar = "bconf",lb=0.5,ub=10),
set_prior("normal(0,10)", class = "b",nlpar = "bs",ub=10)
)
fit_brms <- brm(
bf(
expedia_si ~ (bcc*covid_cases) + (bcd* covid_deaths) + (bcv * coronavirus_si) + (bld *lockdown) + (bconf * cci) + (bs * seasonality),
bcc + bcd + bcv + bld + bconf + bs ~ 1,
nl = TRUE
),
data= canada_travel,
family = "gaussian",
prior = prior_list,
control = list(adapt_delta = 0.97),
chains = 4,
warmup = 1000,
iter = 5000,
cores = 3
)
######################
### Fit chart #######
#####################
predicted_values <- as.data.frame(predict(fit_brms , canada_travel))
fit_df <- cbind.data.frame(canada_travel$date , canada_travel$expedia_si , predicted_values$Estimate)
colnames(fit_df)[1] <- "Date"
colnames(fit_df)[2] <- "Actual"
colnames(fit_df)[3] <- "Predicted"
rm(predicted_list)
ggplot(fit_df , aes(x = Date)) +
geom_line(aes(y = Actual , color = "Actual")) +
geom_line(aes(y = Predicted , color = "Predicted")) +
xlab("Date") +
ylab("Travel Trends")
### Prior List.
prior_list<-
c(
set_prior("normal(0,10)", class = "b",nlpar = "bcc",ub=-0.0001),
set_prior("normal(0,10)", class = "b",nlpar = "bcd",ub=-0.0001),
set_prior("normal(0,10)", class = "b",nlpar = "bcv",ub=-0.0001),
set_prior("normal(0,10)", class = "b",nlpar = "bld",lb=-20,ub=-0.001),
set_prior("normal(0,10)", class = "b",nlpar = "bconf",lb=0.5,ub=10),
set_prior("normal(0,10)", class = "b",nlpar = "bs",ub=10)
)
fit_brms <- brm(
bf(
expedia_si ~ (bcc*covid_cases) + (bcd* covid_deaths) + (bcv * coronavirus_si) + (bld *lockdown) + (bconf * cci) + (bs * seasonality),
bcc + bcd + bcv + bld + bconf + bs ~ 1,
nl = TRUE
),
data= canada_travel,
family = "gaussian",
prior = prior_list,
control = list(adapt_delta = 0.97),
chains = 4,
warmup = 1000,
iter = 5000,
cores = 3
)
######################
### Fit chart #######
#####################
predicted_values <- as.data.frame(predict(fit_brms , canada_travel))
fit_df <- cbind.data.frame(canada_travel$date , canada_travel$expedia_si , predicted_values$Estimate)
colnames(fit_df)[1] <- "Date"
colnames(fit_df)[2] <- "Actual"
colnames(fit_df)[3] <- "Predicted"
rm(predicted_list)
ggplot(fit_df , aes(x = Date)) +
geom_line(aes(y = Actual , color = "Actual")) +
geom_line(aes(y = Predicted , color = "Predicted")) +
xlab("Date") +
ylab("Travel Trends")
####################
### Model
##################
# IMPORTANT Notes.
## 1. BRMS package & STAN throw errors when variable names have special characters.
### Prior List.
prior_list<-
c(
set_prior("normal(0,10)", class = "b",nlpar = "bcc",ub=-0.0001),
set_prior("normal(0,10)", class = "b",nlpar = "bcd",ub=-0.0001),
set_prior("normal(0,10)", class = "b",nlpar = "bcv",ub=-0.0001),
set_prior("normal(0,10)", class = "b",nlpar = "bld",lb=-50,ub=-0.001),
set_prior("normal(0,10)", class = "b",nlpar = "bconf",lb=0.5,ub=10),
set_prior("normal(0,10)", class = "b",nlpar = "bs",ub=10)
)
fit_brms <- brm(
bf(
expedia_si ~ (bcc*covid_cases) + (bcd* covid_deaths) + (bcv * coronavirus_si) + (bld *lockdown) + (bconf * cci) + (bs * seasonality),
bcc + bcd + bcv + bld + bconf + bs ~ 1,
nl = TRUE
),
data= canada_travel,
family = "gaussian",
prior = prior_list,
control = list(adapt_delta = 0.97),
chains = 4,
warmup = 1000,
iter = 5000,
cores = 3
)
######################
### Fit chart #######
#####################
predicted_values <- as.data.frame(predict(fit_brms , canada_travel))
fit_df <- cbind.data.frame(canada_travel$date , canada_travel$expedia_si , predicted_values$Estimate)
colnames(fit_df)[1] <- "Date"
colnames(fit_df)[2] <- "Actual"
colnames(fit_df)[3] <- "Predicted"
rm(predicted_list)
ggplot(fit_df , aes(x = Date)) +
geom_line(aes(y = Actual , color = "Actual")) +
geom_line(aes(y = Predicted , color = "Predicted")) +
xlab("Date") +
ylab("Travel Trends")
coef(fit_brms)
coef(fixef.fit_brms)
fixef(fit_brms)
ranef(fit_brms)
coef(fit_brms)
